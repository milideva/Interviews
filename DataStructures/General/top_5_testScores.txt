== Question ==
Given a list of TestResult, where each result contains a test score, a student ID and a date, figure out the students' final scores. A final score is the average of a student's top 5 scores.

Here is a sample of the list of TestResult:
50 JACK 5/14/2013
89 ALICE 3/25/2012
70 BOBBY 12/7/2010
60 JACK 8/9/2013
99 MIKE 9/11/2011
100 JOHN 7/4/2011
38 JACK 1/28/2014
46 JACK 11/15/2012
<... more ...>

struct TestResult {
score,
student_id,
date,
}

== Solution ==


One possible solution is that we will create a separate min heap for all the students each exactly having 5 nodes. Insert everything until the the heap reaches size 5. Than

if new element is greater than the root replace it with root (delete and insert operation of heap)
else ignore

when all the data has been seen once.
calculate average for each heap.

From what I think we need not to use student name(names can be repeated use id instead) or date for the score

Complexity
Building each heap is O(5)
building n/5 heaps is O(n)
at max n inserts O(nlog5)= O(n)
at max n deletions O(nlog5)= O(n)

total complexity O(n)


